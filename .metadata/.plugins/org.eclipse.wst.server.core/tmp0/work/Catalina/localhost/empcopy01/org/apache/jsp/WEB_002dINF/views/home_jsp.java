/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-12-20 14:58:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/Project/Spring_Source/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Ajax_EMP_copy8/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1606406842978L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("\t<title>동적SQL연습</title>\n");
      out.write("\t\n");
      out.write("\t<style type=\"text/css\">\t\n");
      out.write("\ttable{\n");
      out.write("\tborder:1px solid gray;\n");
      out.write("\twidth:500px;\n");
      out.write("\tmargin:0 auto;\n");
      out.write("\tborder-collapse: collapse;\n");
      out.write("\t}\n");
      out.write("\ttd{\n");
      out.write("\tborder:1px solid gray;\n");
      out.write("\t}\n");
      out.write("\t</style>\n");
      out.write("\t\n");
      out.write("\t<script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-3.2.1.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t//목록 \n");
      out.write("\t$(document).ready(function(){\n");
      out.write("\tfunction selectData(){\n");
      out.write("\t\t$('#output').empty(); //table내부 내용을 제거(초기화)\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\turl:'/empcopy01/getEmpdata.do', // 고민 고민 getEmpdata\n");
      out.write("\t\ttype:'POST',\n");
      out.write("\t\t//dataType:'json', // 서버에서 보내줄 데이터 타입 //오라클에서 받아 올때도 json으로 받아 오나? m.m 아니지 않나 알아보자. \n");
      out.write("\t\tcontentType:'application/x-www-form-urlencoded;charset=utf-8',\n");
      out.write("\t\t\n");
      out.write("\t\tsuccess:function(data){\n");
      out.write("\t\t\t$.each(data, function(index, item){\t\n");
      out.write("\t\t\t\tvar output=' ' ;\n");
      out.write("\t\t\t\toutput += '<tr>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.empno+'</td>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.ename+'</td>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.job+'</td>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.mgr+'</td>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.hiredate+'</td>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.sal+'</td>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.comm+'</td>';\n");
      out.write("\t\t\t\toutput += '<td>'+item.deptno+'</td>';\n");
      out.write("\t\t\t\toutput += '<tr>';\n");
      out.write("\t\t\t\tconsole.log(\"output:\"+output);\n");
      out.write("\t\t\t\t$('#output').append(output);\n");
      out.write("\t\t\t});\n");
      out.write("\t\t},\n");
      out.write("\t\terror:function(){\n");
      out.write("\t\t\talert(\"ajax통신 실패1!!!\");\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t});\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t//});\n");
      out.write("\t\t\n");
      out.write("\t\n");
      out.write("\t\t//2\n");
      out.write("\t\t//1 다시  //함수 부분+ 버튼 이벤트 부분. \n");
      out.write("\t\t$('.content').on(\"click\",function(){  //ADD202012181310-1\n");
      out.write("\t\t\tfunction selectData(){\n");
      out.write("\t\t\t\t$('#output').empty(); \n");
      out.write("\t\t\t\t\n");
      out.write("\t\t$(\"input[name=checkbox]:checked\").each(function(){\t\t\t\n");
      out.write("\t\t\tconsole.log('checkbox :' + $(this).val() );\t//\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t//\n");
      out.write("\t\t\tjQuery.ajax({\n");
      out.write("\t\t\t\turl:'/empcopy01/getEmpdata2.do',\n");
      out.write("\t\t\t\t//url: $(this).attr(\"href\"),\n");
      out.write("\t\t\t\ttype:'POST',\n");
      out.write("\t\t\t\tdata:{'id':$(this).attr(\"id\")},\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tcontentType: 'application/x-www-form-urlencoded;charset=utf-8',\t\n");
      out.write("\t\t\t\tdataType:'json',\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tsuccess:function(retVal){\n");
      out.write("\t\t\t\t\tif(retVal.res==\"OK\"){//데이타 성공일때 이벤트 작성    \n");
      out.write("\t\t\t\t\t\tselectData();\t\t\t\t\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\telse\n");
      out.write("\t\t\t\t\t{\n");
      out.write("\t\t\t\t\t\talert(\" Fail!!!\");\t\t\t\t\t\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t},\n");
      out.write("\t\t\t\terror:function(){\n");
      out.write("\t\t\t\t\talert(\"ajax통신 실패2!!!\");\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t//기본 이벤트 제거 \n");
      out.write("\t\t\tevent.preventDefault();\t\t\t\n");
      out.write("\t\t\t//\t\t\t\n");
      out.write("\t\t});\t\t\n");
      out.write("\t\t//\t1\n");
      out.write("\t});//ADD202012181310-1\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("};\t\t\t\n");
      out.write("selectData();//\n");
      out.write("});\n");
      out.write("\n");
      out.write("\t</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\t<!-- 데이터 가져 오고 나면 체크 박스 자리  -->\n");
      out.write("\t\n");
      out.write("<h1>\n");
      out.write("\tHello Dynamic SQL?!  \t\n");
      out.write("</h1>\n");
      out.write("\n");
      out.write("<P> Blueberry Eyes~~</P>\n");
      out.write("<P> DONE is Better than perfect!!!! </P>\n");
      out.write("\n");
      out.write("\t\t\n");
      out.write("\n");
      out.write("<h2> Scott's EMP table!  </h2>\n");
      out.write("<div class=\"content\">\n");
      out.write("\n");
      out.write("<label><input type=\"checkbox\" name=\"checkbox\" value=\"10\">No.10</label>\n");
      out.write("<label><input type=\"checkbox\" name=\"checkbox\" value=\"20\">No.20</label>\n");
      out.write("<label><input type=\"checkbox\" name=\"checkbox\" value=\"30\">No.30</label>\n");
      out.write("\n");
      out.write("<button type=\"button\" onclick=\"getValue()\">Click!!!</button>\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<table id=\"output\"></table> \n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
